version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: coastal-mongodb-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: coastal-resilience
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - coastal-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: coastal-backend-prod
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/coastal-resilience?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: 7d
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      ML_SERVICE_URL: http://ml-service:8000
      EMERGENCY_API_URL: ${EMERGENCY_API_URL}
      SMS_API_KEY: ${SMS_API_KEY}
      NDRF_API_KEY: ${NDRF_API_KEY}
    depends_on:
      - mongodb
      - ml-service
    networks:
      - coastal-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: coastal-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      REACT_APP_API_URL: https://api.coastal-resilience.gov.in/api
      REACT_APP_SOCKET_URL: https://api.coastal-resilience.gov.in
    depends_on:
      - backend
    networks:
      - coastal-network
    volumes:
      - ./ssl:/etc/ssl/certs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile.prod
    container_name: coastal-ml-service-prod
    restart: always
    ports:
      - "8000:8000"
    environment:
      PYTHONPATH: /app
      MODEL_PATH: /app/models
    volumes:
      - ./ml-models:/app/models
    networks:
      - coastal-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: coastal-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - coastal-network

volumes:
  mongodb_data:
    driver: local

networks:
  coastal-network:
    driver: bridge